- name: Install Nginx
  apt:
    name: nginx
    state: latest
    update_cache: yes

- name: start nginx
  shell: |
    systemctl start nginx
    systemctl status nginx
  register: nginx_start_message

- name: Show nginx start message
  debug:
    msg: "{{ nginx_start_message.stdout_lines }}"

- name: Copy config files (Reverse)
  copy:
    src: reverse_proxy
    dest: /etc/nginx/sites-available/
  when: proxy_type == "reverse"

- name: Copy config files (forward)
  copy:
    src: forward_proxy
    dest: /etc/nginx/sites-available/
  when: proxy_type == "forward"
    
- name: Add symlinks (Reverse)
  file:
    src: /etc/nginx/sites-available/reverse_proxy
    dest: /etc/nginx/sites-enabled/reverse_proxy
    state: link
  when: proxy_type == "reverse"

- name: Add symlinks (Forward)
  file:
    src: /etc/nginx/sites-available/forward_proxy
    dest: /etc/nginx/sites-enabled/forward_proxy
    state: link
  when: proxy_type == "forward"

- name: Remove existing default setting
  shell: |
    rm /etc/nginx/sites-available/default
    rm /etc/nginx/sites-enabled/default
    
- name: start nginx
  shell: |
    systemctl restart nginx


# # Test for reverse proxy
# - name: Install venv
#   apt:
#     name: python3-venv
#     state: latest
#     update_cache: yes
#   when: proxy_type == "reverse"

# - name: Configure flask app
#   shell: |
#     python3 -m venv venv
#     source venv/bin/activate
#     cd simple_flask_app
#     pip install -r requirements.txt
#     gunicorn --bind 0.0.0.0:5000 wsgi:app --daemon
#   when: proxy_type == "reverse"
#   args:
#     executable: /bin/bash
#   register: app_config

# - name: Show app config
#   debug:
#     msg: "{{ app_config.stdout_lines }}"
#   when: proxy_type == "reverse"

# - name: Test connection
#   shell: curl http://localhost
#   register: test_output
#   when: proxy_type == "reverse"

# - name: Show connection test output
#   debug:
#     msg: "{{ test_output.stdout_lines }} or {{ test_output.stderr_lines }}"
#   when: proxy_type == "reverse"


# Test for forward proxy
- name: Test connection
  shell: curl http://google.com -x localhost:8888
  register: test_output
  when: proxy_type == "forward"

- name: Show connection test output
  debug:
    msg: "{{ test_output.stdout_lines }} or {{ test_output.stderr_lines }}"
  when: proxy_type == "forward"
